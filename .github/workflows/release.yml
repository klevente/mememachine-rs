# https://codingpackets.com/blog/rust-binary-and-docker-releases-using-github-actions/#release-workflow
name: Release

permissions:
  contents: "write"

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Create release
    runs-on: ${{ matrix.arch.os }}

    strategy:
      matrix:
        arch:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, suffix: "" }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest, suffix: "" }
          - { target: x86_64-pc-windows-msvc, os: windows-latest, suffix: ".exe" }
          - { target: x86_64-apple-darwin, os: macos-latest, suffix: "" }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libopus-dev

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target ${{ matrix.arch.target }}

      - name: Package
        uses: vimtor/action-zip@v1.1
        with:
          files: target/${{ matrix.arch.target }}/release/mememachine-rs${{ matrix.arch.suffix }}
          dest: mememachine-rs-${{ matrix.arch.target }}.zip

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "mememachine-rs*"
          generate_release_notes: true

  docker:
    # https://github.com/aquelemiguel/parrot/blob/main/.github/workflows/docker.yml
    name: Build & push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3

      - name: Registry Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract git metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}