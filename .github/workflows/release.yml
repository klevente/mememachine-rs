name: Release
# https://codingpackets.com/blog/rust-binary-and-docker-releases-using-github-actions/#release-workflow

permissions:
  contents: "write"

on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  tag:
    if: ${{ github.event.pull_request.merged && contains(github.event.pull_request.labels.*.name, 'release') }}
    name: Create tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Get version from Cargo.toml
        id: get-version
        run: echo VERSION=$(cargo pkgid | cut -d@ -f2) >> $GITHUB_OUTPUT

      - name: Push tag
        shell: "bash"
        run: |
          git tag ${{ steps.get-version.outputs.VERSION }} && git push --tags

  release:
    name: Create release
    needs: [tag]
    runs-on: ${{ matrix.arch.os }}

    strategy:
      matrix:
        arch:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, suffix: "" }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest, suffix: "" }
          - { target: x86_64-pc-windows-msvc, os: windows-latest, suffix: ".exe" }
          - { target: x86_64-apple-darwin, os: macos-latest, suffix: "" }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libopus-dev

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target ${{ matrix.arch.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.arch.target }}/release          
          tar czvf ../../../mememachine-rs-${{ matrix.arch.target }}.tar.gz mememachine-rs${{ matrix.arch.suffix }}
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "mememachine-rs*"
          tag_name: ${{ needs.tag.outputs.version }}

  docker:
    # https://github.com/aquelemiguel/parrot/blob/main/.github/workflows/docker.yml
    name: Build & push Docker image
    needs: [tag]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v3

      - name: Registry Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract git metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
