name: CI (Bot)

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bot

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: bot


      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path bot/Cargo.toml -- -D clippy::all -D warnings

  rustfmt:
    name: Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bot

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  build:
    name: Build
    runs-on: ${{ matrix.arch.os }}
    defaults:
      run:
        working-directory: ./bot

    strategy:
      matrix:
        arch:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, suffix: "" }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest, suffix: "" }
          - { target: x86_64-pc-windows-msvc, os: windows-latest, suffix: ".exe" }
          - { target: x86_64-apple-darwin, os: macos-latest, suffix: "" }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.arch.target }}
          profile: minimal
          override: true

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libopus-dev

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: bot

      - name: Build Binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --manifest-path bot/Cargo.toml --locked --target ${{ matrix.arch.target }}
