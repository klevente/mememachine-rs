name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          profile: minimal
          override: true

      - name: Rustfmt
        run: cargo fmt --all -- --check

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ${{ matrix.arch.os }}

    strategy:
      matrix:
        arch:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, suffix: '' }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest, suffix: '' }
          - { target: x86_64-pc-windows-msvc, os: windows-latest, suffix: '.exe' }
          - { target: x86_64-apple-darwin, os: macos-latest, suffix: '' }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        id: tc
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libopus-dev

      - name: Setup cache
        if: runner.os != 'macOS'
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.arch.target }}-test-${{ steps.tc.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Build Binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.arch.target }}

      - name: Package
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          cd target/${{ matrix.arch.target }}/release          
          tar czvf ../../../mememachine-rs-${{ matrix.arch.target }}.tar.gz mememachine-rs${{ matrix.arch.suffix }}
          cd -

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: 'mememachine-rs*'